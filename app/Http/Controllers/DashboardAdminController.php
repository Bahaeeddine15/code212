<?php

namespace App\Http\Controllers;

use App\Models\Article;
use App\Models\Event;
use App\Models\Media;
use App\Models\Formation;
use App\Models\Competition;
use App\Models\User;
use App\Models\Etudiant;
use App\Models\Certificate;
use App\Models\Module;
use App\Models\ModuleFile;
use App\Models\ModuleCompletion;
use App\Models\FormationRegistration;
use App\Models\EventRegistration;
use App\Models\CompetitionRegistration;
use App\Models\Reservation;
use Illuminate\Support\Facades\Storage;

class DashboardAdminController extends Controller
{
    public function index()
    {
        return inertia('dashboard_admin/dashboard', [
            'name' => auth('admin')->user()->name,
            'stats' => [
                // Articles
                'articles' => Article::count(),
                'articles_published' => Article::where('status', 'published')->count(),
                'articles_draft' => Article::where('status', 'draft')->count(),
                'articles_archived' => Article::where('status', 'archived')->count(),
                'articles_views' => Article::sum('views'),
                'articles_this_month' => Article::whereMonth('created_at', now()->month)->count(),

                // Events
                'events' => Event::count(),
                'events_finished' => Event::where('status', 'completed')->count(),
                'events_ongoing' => Event::where('status', 'ongoing')->count(),
                'events_upcoming' => Event::where('status', 'upcoming')->count(),

                // Event Registrations (participants)
                'events_participants' => EventRegistration::where('status', 'registered')->count(),

                // Media
                'media' => Media::count(),
                'media_images' => Media::imagesCount(),
                'media_videos' => Media::videosCount(),
                'media_total_size' => Media::totalSize(),

                // Formations
                'formations' => Formation::count(),
                'formations_students' => FormationRegistration::count(),
                // Only certificates that have been generated by admin are considered delivered
                'formations_certifications' => Certificate::where('is_generated', true)->count(),

                // Modules
                'modules' => Module::count(),

                // Module Files
                'module_files' => ModuleFile::count(),

                // Module Completions
                'module_completions' => ModuleCompletion::count(),

                // Etudiants (students)
                'etudiants' => Etudiant::count(),

                // Certificates (all)
                'certificates' => Certificate::count(),

                // Competitions
                'competitions' => Competition::count(),
                'competitions_active' => Competition::where('status', 'Ouvert')->count(),
                'competitions_participants' => CompetitionRegistration::where('status', 'Confirmé')->count(),
                'competitions_finished' => Competition::where('status', 'Fermé')->count(),

                // Statistiques Générales (using Etudiant table)
                'users_active' => Etudiant::where('last_login_at', '>=', now()->subMonth())->count(), // or your own logic for "active"
                'users_logins_this_month' => Etudiant::whereMonth('last_login_at', now()->month)->count(),
                'users_new_this_month' => Etudiant::whereMonth('created_at', now()->month)->count(),
                'users_engagement' => Etudiant::count() > 0
                    ? round((Etudiant::where('last_login_at', '>=', now()->subMonth())->count() / Etudiant::count()) * 100, 2)
                    : 0,

                // Reservations
                'reservations_total' => Reservation::count(),
                'reservations_pending' => Reservation::pending()->count(),
                'reservations_approved' => Reservation::approved()->count(),
                'reservations_rejected' => Reservation::rejected()->count(),
            ],
            'adminEmail' => auth('admin')->user()->email,
        ]);
    }
}
